version: '3'
services:
  db:
    container_name: postgres_database
    image: postgres:13
    ports:
      - '5432:5432'
    env_file:
      - config/.env
    volumes:
      - "pgdata:/var/lib/postgresql/data"
      # - ./pgdata:/var/lib/postgresql/data (instead use unnamed volume when troubles with permissions)
    restart: unless-stopped
    networks:
      - my_network
  web:
    container_name: django_webserver
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    env_file:
      - config/.env
    depends_on:
      - db
    healthcheck:
      # TODO: использовать импорт user и db через dotenv?
      test: [ "CMD-SHELL", "pg_isready -U app -d movies_database" ]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 10s
    restart: unless-stopped  # on-failure
    networks:
      - my_network
  nginx:
    container_name: nginx_server
    image: nginx:1.19.2
    ports:
      - '80:80'
    volumes:
      # TODO: так ли важны кавычки при указании volumes?
      - ./src/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/site.conf:/etc/nginx/conf.d/site.conf:ro
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1m
      timeout: 3s
      retries: 3
      # start_period: 3s
    restart: unless-stopped
    networks:
      - my_network
  swagger:
    container_name: swagger_ui
    # TODO: need to specify version or just use latest?
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    volumes:
      - "./movies/api/openapi.yaml:/swagger.yaml"
    environment:
      # TODO: env file here too?
      - "SWAGGER_JSON=/swagger.yaml"
    depends_on:
      - nginx
    networks:
      - my_network
  pgadmin:
    container_name: database_pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin000@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - "pgadmin-data:/var/lib/pgadmin"
    depends_on:
      - db
    networks:
      - my_network


networks:
  my_network:

volumes:
  pgdata:
  static:
  media:
  pgadmin-data:
